services:
  app:
    container_name: ticketcontainer
    image: ticketimage:1.1
    ports:
      - "5000:5000"
    
      # - "5001:443"
    environment:
      # - DockerConnectionStrings__SqlConnectionString=Server=sql_server2022;Database=SalesDb;MultipleActiveResultSets=true
      # - DockerConnectionStrings__RedisConnectionString=localhost:6379,abortConnect=false
        - ASPNETCORE_ENVIRONMENT=Development
        - DockerConnectionStrings__SqlConnectionString=Server=sqlserver,1433;Database=TicketDb;User=sa;Password=SA#@Complex#@Password__.123;TrustServerCertificate=True
    depends_on:
      # - redis
      - sqlserver

  # redis:
  #   image: "redis:6.2"
  #   container_name: redis
  #   ports:
  #     - "6379:6379"
  #   command: ["redis-server"]

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "SA#@Complex#@Password__.123"
      ACCEPT_EULA: "Y"
      MSSQL_TCPENCRYPT: "false"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "SA#@Complex#@Password__.123", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 10s
      retries: 3